package com.blackjack.domain

import main.scala.com.blackjack.anyval.Rank._
import main.scala.com.blackjack.anyval.Suit._

case class CardDeck() {
  private val deck: List[Card] = List(
    Card(Ace(), Spades()),
    Card(Ace(), Diamonds()),
    Card(Ace(), Hearts()),
    Card(Ace(), Clubs()),
    Card(King(), Spades()),
    Card(King(), Diamonds()),
    Card(King(), Hearts()),
    Card(King(), Clubs()),
    Card(Queen(), Spades()),
    Card(Queen(), Diamonds()),
    Card(Queen(), Hearts()),
    Card(Queen(), Clubs()),
    Card(Jack(), Spades()),
    Card(Jack(), Diamonds()),
    Card(Jack(), Hearts()),
    Card(Jack(), Clubs()),
    Card(Ten(), Spades()),
    Card(Ten(), Diamonds()),
    Card(Ten(), Hearts()),
    Card(Ten(), Clubs()),
    Card(Nine(), Spades()),
    Card(Nine(), Diamonds()),
    Card(Nine(), Hearts()),
    Card(Nine(), Clubs()),
    Card(Eight(), Spades()),
    Card(Eight(), Diamonds()),
    Card(Eight(), Hearts()),
    Card(Eight(), Clubs()),
    Card(Seven(), Spades()),
    Card(Seven(), Diamonds()),
    Card(Seven(), Hearts()),
    Card(Seven(), Clubs()),
    Card(Six(), Spades()),
    Card(Six(), Diamonds()),
    Card(Six(), Hearts()),
    Card(Six(), Clubs()),
    Card(Five(), Spades()),
    Card(Five(), Diamonds()),
    Card(Five(), Hearts()),
    Card(Five(), Clubs()),
    Card(Four(), Spades()),
    Card(Four(), Diamonds()),
    Card(Four(), Hearts()),
    Card(Four(), Clubs()),
    Card(Three(), Spades()),
    Card(Three(), Diamonds()),
    Card(Three(), Hearts()),
    Card(Three(), Clubs()),
    Card(Two(), Spades()),
    Card(Two(), Diamonds()),
    Card(Two(), Hearts()),
    Card(Two(), Clubs())
  )
}
